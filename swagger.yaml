swagger: "2.0"
info:
  description: "Essa é uma aplicação de um chat simples dos anos 90."
  version: "1.0.0"
  title: "Chat das antigas"
  termsOfService: "http://swagger.io/terms/"
host: "chat.com.br"
basePath: "/v2"
tags:
- name: "room"
  description: "Tudo sobre as salas"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "user"
  description: "Tudo sobre usuáriosr"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
- name: "message"
  description: "Tudo sobre as mensagens"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /user/login:
    post:
      tags:
      - "user"
      summary: "Loga o usuário no sistema"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeeto de login"
        required: true
        schema:
          $ref: "#/definitions/Auth"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /user/createUser:
    post:
      tags:
      - "user"
      summary: "Cria um usuário na aplicação"
      description: ""
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeeto de usuário"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "201":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Email já cadastrado"
  /room:
    get:
      tags:
      - "room"
      summary: "Listar todas as salas"
      description: "Lista todas as salas disponíveis na aplicação"
      operationId: "listRooms"
      produces:
      - "application/json"
      parameters:
      - name: "assunto"
        in: "query"
        description: "filtro por assunto da sala"
        required: false
        type: "string"
        format: "string"
      - name: "idade"
        in: "query"
        description: "filtro por idade da sala"
        required: false
        type: "integer"
        format: "integer"
      - name: "regiao"
        in: "query"
        description: "filtro por região da sala"
        required: false
        type: "string"
        format: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Rooms"
    post:
      tags:
      - "room"
      summary: "Cria nova sala"
      description: "Esa rota cria uma nova sala de interesse"
      operationId: "CreateRoom"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "O objeto sala necessita ser criado"
        required: true
        schema:
          $ref: "#/definitions/Rooms"
      responses:
        "201":
          description: "Sala criada com sucesso"
        "400":
          description: "Sala com o mesmo nome já existente"
  /room/{room_id}:
    post:
      tags:
      - "room"
      summary: "Entra em uma sala"
      description: ""
      operationId: "join Room"
      produces:
      - "application/json"
      parameters:
      - name: "room_id"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Entrou na sala"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "404":
          description: "Sala não encontrada"
        "400":
          description: "Sala lotada"
  /user/{user_id}:
    put:
      tags:
      - "user"
      summary: "Alterar dados do usuario"
      description: "Atualiza dados do usuario"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto do usuário"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Invalid ID supplied"
        "404":
          description: "Usuario não encontrado"
        "405":
          description: "Validation exception"
    delete:
      tags:
      - "user"
      summary: "Deletar Conta"
      description: "Está ação so pode ser feita pelo usuario logado."
      operationId: "deletarConta"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: "O usuário foi deletado com sucesso"
        "404":
          description: "Usuario não encontrado"  
  /message/{room_id}:
    get:
      tags:
      - "message"
      summary: "Listar todas as mensagens da sala"
      description: "Lista todas as mensagens da sala"
      operationId: "listMessages"
      produces:
      - "application/json"
      parameters:
      - name: "room_id"
        in: "path"
        description: "ID da sala"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Message"
  /message:
    post:
      tags:
      - "message"
      summary: "Envia a mensagem em uma sala"
      description: "Envia uma mensagem na sala"
      operationId: "sendMessage"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Objeto da mensagem"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        "201":
          description: "successful operation"
definitions:
  Rooms:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      roomName:
        type: "string"
      region:
        type: "string"
      age:
        type: "string"
      numberOfUsers:
        type: "string"
      capacity:
        type: "integer"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      fullName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
  Auth:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  Message:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      content:
        type: "string"
      created_at:
        type: "string"
      userWhoSent:
        type: "object"
        properties:
          id: 
            type:
              "integer"
          username:
            type: "string"
      userReceiver:
        type: "object"
        properties:
          id: 
            type:
              "integer"
          username:
            type: "string"
    
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"